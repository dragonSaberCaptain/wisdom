<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jskj.wisdom.dao.system.SysUserDAO">
    <resultMap id="BaseResultMap" type="com.jskj.wisdom.model.system.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_id" jdbcType="BIGINT" property="createId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_delete" jdbcType="VARCHAR" property="isDelete"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="update_id" jdbcType="BIGINT" property="updateId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="login_flag" jdbcType="VARCHAR" property="loginFlag"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="work_number" jdbcType="VARCHAR" property="workNumber"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="user_type" jdbcType="VARCHAR" property="userType"/>
        <!--<collection property="roles" ofType="com.jskj.wisdom.model.system.SysRole">-->
        <!--<result column="name" property="name"/>-->
        <!--</collection>-->
    </resultMap>
    <sql id="Base_Column_List">
        id, create_id, create_time, is_delete, remark, update_id, update_time, email, login_flag,
        login_name, mobile, nick_name, password, work_number, phone, user_type
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.jskj.wisdom.model.system.SysUser"
            useGeneratedKeys="true">
        insert into sys_user (create_id, create_time, is_delete,
            remark, update_id, update_time,
            email, login_flag, login_name,
            mobile, nick_name, password,
            work_number, phone, user_type
            )
        values (#{createId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=VARCHAR},
            #{remark,jdbcType=VARCHAR}, #{updateId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
            #{email,jdbcType=VARCHAR}, #{loginFlag,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR},
            #{mobile,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{workNumber,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}
            )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.jskj.wisdom.model.system.SysUser"
            useGeneratedKeys="true">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createId != null">
                create_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="loginFlag != null">
                login_flag,
            </if>
            <if test="loginName != null">
                login_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="workNumber != null">
                work_number,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="userType != null">
                user_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="loginFlag != null">
                #{loginFlag,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="workNumber != null">
                #{workNumber,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <insert id="insertBatch" keyColumn="id" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
        insert into sys_user (create_id, create_time, is_delete,
        remark, update_id, update_time,
        email, login_flag, login_name,
        mobile, nick_name, password,
        work_number, phone, user_type
        )
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.createId,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.isDelete,jdbcType=VARCHAR},
            #{item.remark,jdbcType=VARCHAR}, #{item.updateId,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.email,jdbcType=VARCHAR}, #{item.loginFlag,jdbcType=VARCHAR}, #{item.loginName,jdbcType=VARCHAR},
            #{item.mobile,jdbcType=VARCHAR}, #{item.nickName,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR},
            #{item.workNumber,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, #{item.userType,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <insert id="insertBatchSelective" keyColumn="id" keyProperty="id" parameterType="java.util.List"
            useGeneratedKeys="true">
        insert into sys_user
        (create_id, create_time, is_delete, remark, update_id, update_time, email, login_flag,
        login_name, mobile, nick_name, password, work_number, phone, user_type)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.createId != null">
                    #{item.createId,jdbcType=BIGINT},
                </if>
                <if test="item.createId == null">
                    NULL,
                </if>
                <if test="item.createTime != null">
                    #{item.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.createTime == null">
                    NULL,
                </if>
                <if test="item.isDelete != null">
                    #{item.isDelete,jdbcType=VARCHAR},
                </if>
                <if test="item.isDelete == null">
                    NULL,
                </if>
                <if test="item.remark != null">
                    #{item.remark,jdbcType=VARCHAR},
                </if>
                <if test="item.remark == null">
                    NULL,
                </if>
                <if test="item.updateId != null">
                    #{item.updateId,jdbcType=BIGINT},
                </if>
                <if test="item.updateId == null">
                    NULL,
                </if>
                <if test="item.updateTime != null">
                    #{item.updateTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.updateTime == null">
                    NULL,
                </if>
                <if test="item.email != null">
                    #{item.email,jdbcType=VARCHAR},
                </if>
                <if test="item.email == null">
                    NULL,
                </if>
                <if test="item.loginFlag != null">
                    #{item.loginFlag,jdbcType=VARCHAR},
                </if>
                <if test="item.loginFlag == null">
                    NULL,
                </if>
                <if test="item.loginName != null">
                    #{item.loginName,jdbcType=VARCHAR},
                </if>
                <if test="item.loginName == null">
                    NULL,
                </if>
                <if test="item.mobile != null">
                    #{item.mobile,jdbcType=VARCHAR},
                </if>
                <if test="item.mobile == null">
                    NULL,
                </if>
                <if test="item.nickName != null">
                    #{item.nickName,jdbcType=VARCHAR},
                </if>
                <if test="item.nickName == null">
                    NULL,
                </if>
                <if test="item.password != null">
                    #{item.password,jdbcType=VARCHAR},
                </if>
                <if test="item.password == null">
                    NULL,
                </if>
                <if test="item.workNumber != null">
                    #{item.workNumber,jdbcType=VARCHAR},
                </if>
                <if test="item.workNumber == null">
                    NULL,
                </if>
                <if test="item.phone != null">
                    #{item.phone,jdbcType=VARCHAR},
                </if>
                <if test="item.phone == null">
                    NULL,
                </if>
                <if test="item.userType != null">
                    #{item.userType,jdbcType=VARCHAR},
                </if>
                <if test="item.userType == null">
                    NULL,
                </if>
            </trim>
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jskj.wisdom.model.system.SysUser">
        update sys_user
        <set>
            <if test="createId != null">
                create_id = #{createId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="loginFlag != null">
                login_flag = #{loginFlag,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="workNumber != null">
                work_number = #{workNumber,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jskj.wisdom.model.system.SysUser">
        update sys_user
        set create_id = #{createId,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            is_delete = #{isDelete,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            update_id = #{updateId,jdbcType=BIGINT},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            email = #{email,jdbcType=VARCHAR},
            login_flag = #{loginFlag,jdbcType=VARCHAR},
            login_name = #{loginName,jdbcType=VARCHAR},
            mobile = #{mobile,jdbcType=VARCHAR},
            nick_name = #{nickName,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            work_number = #{workNumber,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            user_type = #{userType,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id !=null ">
                id = #{id,jdbcType=BIGINT}
            </if>
            <if test="createId != null">
                and create_id = #{createId,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete,jdbcType=VARCHAR}
            </if>
            <if test="remark != null">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="updateId != null">
                and update_id = #{updateId,jdbcType=BIGINT}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="email != null">
                and email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="loginFlag != null">
                and login_flag = #{loginFlag,jdbcType=VARCHAR}
            </if>
            <if test="loginName != null">
                and login_name = #{loginName,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null">
                and mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="password != null">
                and password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="workNumber != null">
                and work_number = #{workNumber,jdbcType=VARCHAR}
            </if>
            <if test="phone != null">
                and phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="userType != null">
                and user_type = #{userType,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
    <select id="selectBySelective" parameterType="com.jskj.wisdom.model.system.SysUser" resultMap="BaseResultMap">
        select
        distinct
        <include refid="Base_Column_List"/>
        from sys_user
        <include refid="searchBy"/>
    </select>

    <!--<select id="selectRolesByUserName" parameterType="String" resultMap="BaseResultMap">-->
    <!--select-->
    <!--distinct-->
    <!--u.*,r.name-->
    <!--from sys_user u-->
    <!--LEFT JOIN sys_user_role ur on u.id= ur.user_id-->
    <!--LEFT JOIN sys_role r on ur.role_id=r.id-->
    <!--where login_name= #{loginName}-->
    <!--</select>-->
</mapper>